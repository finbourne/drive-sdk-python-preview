{
  "openapi": "3.0.1",
  "info": {
    "title": "FINBOURNE Drive API",
    "termsOfService": "https://www.finbourne.com/legal/terms-conditions",
    "contact": {
      "name": "FINBOURNE Technology",
      "url": "https://www.finbourne.com",
      "email": "info@finbourne.com"
    },
    "version": "0.1.589",
    "x-logo": {
      "url": "https://www.lusid.com/app/assets/logo_white.png",
      "backgroundColor": "#415464"
    },
    "description": "FINBOURNE Technology"
  },
  "servers": [
    {
      "url": "https://fbn-ci.lusid.com/drive"
    }
  ],
  "paths": {
    "/api/files": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "[EARLY ACCESS] CreateFile: Uploads a file to Lusid Drive. If using an SDK, consider using the UploadAsStreamAsync function for larger files instead.",
        "operationId": "CreateFile",
        "parameters": [
          {
            "name": "x-lusid-drive-filename",
            "in": "header",
            "description": "File name.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9_\\-\\.]+[A-Za-z0-9_\\-\\. ]*$",
              "type": "string"
            }
          },
          {
            "name": "x-lusid-drive-path",
            "in": "header",
            "description": "File path.",
            "required": true,
            "schema": {
              "maxLength": 512,
              "minLength": 1,
              "pattern": "^[\\/a-zA-Z0-9 \\-_]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "description": "The size in bytes of the file to be uploaded",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "[EARLY ACCESS] GetFile: Get a file stored in Drive.",
        "operationId": "GetFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the file to be retrieved.",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "[EARLY ACCESS] DeleteFile: Deletes a file from Drive.",
        "operationId": "DeleteFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the file to be deleted.",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Files"
        ],
        "summary": "[EARLY ACCESS] UpdateFileMetadata: Updates metadata for a file in Drive.",
        "operationId": "UpdateFileMetadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the file to be updated",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update to be applied to file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFile"
              },
              "example": {
                "path": "/New/parent/folder/path",
                "name": "new-file-name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/files/{id}/contents": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "[EARLY ACCESS] DownloadFile: Download the file from Drive.",
        "operationId": "DownloadFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the file to be downloaded.",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "410": {
            "description": "Malware detected, restricted from downloading file.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "423": {
            "description": "Virus scan in progress, restricted from downloading file.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Files"
        ],
        "summary": "[EARLY ACCESS] UpdateFileContents: Updates contents of a file in Drive.",
        "operationId": "UpdateFileContents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique file identifier",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "description": "The size in bytes of the file to be uploaded",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/folders": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "[EARLY ACCESS] GetRootFolder: List contents of root folder",
        "operationId": "GetRootFolder",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The pagination token to use to continue listing contents from a previous call to list contents.\r\n            This value is returned from the previous call. If a pagination token is provided the sortBy and filter fields\r\n            must not have changed since the original request. Also, if set, a start value cannot be provided.",
            "schema": {
              "maxLength": 500,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\+/]*={0,3}$",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Order the results by these fields. Use use the '-' sign to denote descending order.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "When paginating, skip this number of results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Expression to filter the result set.",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string",
              "default": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "[EARLY ACCESS] CreateFolder: Create a new folder in LUSID Drive",
        "operationId": "CreateFolder",
        "requestBody": {
          "description": "A CreateFolder object that defines the name and path of the new folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolder"
              },
              "example": {
                "path": "/path/to/saveTo/",
                "name": "folderName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/folders/{id}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "[EARLY ACCESS] GetFolder: Get metadata of folder",
        "operationId": "GetFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the folder",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No folder with this Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "[EARLY ACCESS] UpdateFolder: Update an existing folder's name, path",
        "operationId": "UpdateFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the folder",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An UpdateFolder object that defines the new name or path of the folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFolder"
              },
              "example": {
                "path": "/Documents/Common/Legal/",
                "name": "FolderName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObject"
                },
                "example": {
                  "id": "fb7225b63b864752aa03ba37872fe8e8",
                  "path": "/documents/admin/legals",
                  "name": "mylegaldocument.docx",
                  "createdBy": "00u3dipdntsyNqFf51t7",
                  "createdOn": "2020-01-02T00:00:00.0000000+00:00",
                  "updatedBy": "00u6po8cnkZoLoS5j1t7",
                  "updatedOn": "2020-03-02T00:00:00.0000000+00:00",
                  "type": "File",
                  "size": 123456,
                  "status": "Available",
                  "statusDetail": ""
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No folder with this Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Folders"
        ],
        "summary": "[EARLY ACCESS] DeleteFolder: Delete a specified folder and all subfolders",
        "operationId": "DeleteFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the folder",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No folder with this Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "[EARLY ACCESS] MoveFolder: Move files to specified folder",
        "operationId": "MoveFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the folder where the files should be moved",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "True if the destination has file with same name if should be overwritten",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-nullable": true
          },
          {
            "name": "deleteSource",
            "in": "query",
            "description": "If true after moving the original file is deleted",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-nullable": true
          }
        ],
        "requestBody": {
          "description": "Enumerable of unique IDs of files that should be moved",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": [
                "FolderID1",
                "FolderID2",
                "FolderID3"
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No folder or file with the supplied Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "There is already a file with the same name at this location",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/folders/{id}/contents": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "[EARLY ACCESS] GetFolderContents: List contents of a folder",
        "operationId": "GetFolderContents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the folder",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 30,
              "pattern": "^[a-zA-Z0-9\\-]+$",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The pagination token to use to continue listing contents from a previous call to list contents.\r\n            This value is returned from the previous call. If a pagination token is provided the sortBy and filter fields\r\n            must not have changed since the original request. Also, if set, a start value cannot be provided.",
            "schema": {
              "maxLength": 500,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\+/]*={0,3}$",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Order the results by these fields. Use use the '-' sign to denote descending order.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "When paginating, skip this number of results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Expression to filter the result set.",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No folder with this Id exists",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/metadata/access/resources": {
      "get": {
        "tags": [
          "Application Metadata"
        ],
        "summary": "[EARLY ACCESS] ListAccessControlledResources: Get resources available for access control",
        "description": "Get the comprehensive set of resources that are available for access control",
        "operationId": "ListAccessControlledResources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "[EARLY ACCESS] Search: Search for a file or folder with a given name and path",
        "operationId": "Search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "schema": {
              "maxLength": 500,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\+/]*={0,3}$",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "description": "Search parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchBody"
              },
              "example": {
                "withPath": "/some/path",
                "name": "filename.pdf"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceListOfStorageObject"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    }
  },
  "components": {
    "schemas": {
      "AccessControlledAction": {
        "required": [
          "action",
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/ActionId"
          },
          "limitedSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdSelectorDefinition"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccessControlledResource": {
        "required": [
          "actions",
          "description"
        ],
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledAction"
            }
          },
          "identifierParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifierPartSchema"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActionId": {
        "required": [
          "activity",
          "entity",
          "scope"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "activity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "entity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateFolder": {
        "required": [
          "name",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\/a-zA-Z0-9 \\-_]+$",
            "type": "string",
            "description": "Path of the created folder"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9_-]+[A-Za-z0-9 _-]*$",
            "type": "string",
            "description": "Name of the created folder"
          }
        },
        "additionalProperties": false,
        "description": "DTO representing the creation of a folder"
      },
      "IdentifierPartSchema": {
        "required": [
          "description",
          "displayName",
          "index",
          "name",
          "required"
        ],
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdSelectorDefinition": {
        "required": [
          "actions",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "minLength": 1,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "actions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Link": {
        "required": [
          "href",
          "method",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LusidProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LusidValidationProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResourceListOfStorageObject": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageObject"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceListOfAccessControlledResource": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledResource"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchBody": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "withPath": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\/a-zA-Z0-9 \\-_]+$",
            "type": "string",
            "description": "Optional path field to limit the search to result with a matching (case insensitive) path",
            "nullable": true
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9_\\-\\.]+[A-Za-z0-9_\\-\\. ]*$",
            "type": "string",
            "description": "Name of the file or folder to be searched"
          }
        },
        "additionalProperties": false,
        "description": "DTO representing the search query"
      },
      "StorageObject": {
        "required": [
          "createdBy",
          "createdOn",
          "id",
          "name",
          "path",
          "type",
          "updatedBy",
          "updatedOn"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "minLength": 30,
            "pattern": "^[a-zA-Z0-9\\-]+$",
            "type": "string",
            "description": "File or folder identifier"
          },
          "path": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\/a-zA-Z0-9 \\-_]+$",
            "type": "string",
            "description": "Path of the folder or file"
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9_\\-\\.]+[A-Za-z0-9_\\-\\. ]*$",
            "type": "string",
            "description": "Name of the folder or file"
          },
          "createdBy": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the user who created the file or folder"
          },
          "createdOn": {
            "type": "string",
            "description": "Date of file/folder creation",
            "format": "date-time"
          },
          "updatedBy": {
            "minLength": 1,
            "type": "string",
            "description": "Identifier of the last user to modify the file or folder"
          },
          "updatedOn": {
            "type": "string",
            "description": "Date of file/folder modification",
            "format": "date-time"
          },
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Type of storage object (file or folder)"
          },
          "size": {
            "type": "integer",
            "description": "Size of the file in bytes",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "File status corresponding to virus scan status.\r\n(Active, Available, Checking, MalwareDetected, Failed)",
            "nullable": true
          },
          "statusDetail": {
            "type": "string",
            "description": "Detailed description describing any negative terminal state of file",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An object representation of a drive file or folder"
      },
      "UpdateFile": {
        "required": [
          "name",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\/a-zA-Z0-9 \\-_]+$",
            "type": "string",
            "description": "Path of the updated file"
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9_\\-\\.]+[A-Za-z0-9_\\-\\. ]*$",
            "type": "string",
            "description": "Name of the updated file"
          }
        },
        "additionalProperties": false,
        "description": "DTO representing the update of the name or path of a file"
      },
      "UpdateFolder": {
        "required": [
          "name",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\/a-zA-Z0-9 \\-_]+$",
            "type": "string",
            "description": "Path of the updated folder"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9_-]+[A-Za-z0-9 _-]*$",
            "type": "string",
            "description": "Name of the updated folder"
          }
        },
        "additionalProperties": false,
        "description": "DTO representing the update of the name or path of a file"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 Implicit Grant",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://lusid.okta.com/oauth2/default/v1/authorize",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {}
  ],
  "tags": [
    {
      "name": "Application Metadata",
      "description": "Metadata about the application"
    },
    {
      "name": "Files",
      "description": "Methods for interacting with the files endpoints in Lusid drive"
    },
    {
      "name": "Folders",
      "description": "Methods for interacting with the folders endpoints in Lusid drive"
    },
    {
      "name": "Search",
      "description": "Method to search files and folders"
    }
  ],
  "x-tagGroups": {
    "name": "API",
    "tags": [
      "Application Metadata",
      "Files",
      "Folders",
      "Search"
    ]
  }
}
